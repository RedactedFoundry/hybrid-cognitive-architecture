JSON-Prompt-v1.3.json
python
# Step 1: JSON Structure Analysis with Mistral
            self.logger.debug("Step 1: Structuring query with Mistral JSON analysis")
            
            structure_prompt = f"""You are an analytical framework designer. Your task is to convert complex questions into structured JSON frameworks that ensure systematic, comprehensive analysis regardless of domain.

QUESTION TO ANALYZE:
{user_question}

Your JSON structure must follow these EXPERT STANDARDS:

=== CORE STRUCTURE ===
{{
  "analysis_type": "decision_making" | "comparison_analysis" | "problem_solving" | "explanation" | "planning",
  "complexity_level": "high" | "medium" | "low",
  "context_framework": {{
    "affected_parties": ["who is impacted by this topic"],
    "time_scope": "immediate" | "short_term" | "long_term" | "ongoing",
    "impact_level": "high" | "medium" | "low" | "none",
    "complexity_factors": ["what makes this complex"],
    "uncertainty_factors": ["what information is missing or uncertain"],
    "resource_constraints": ["time", "money", "energy", "relationships", "other_limitations"],
    "values_considerations": "how this aligns with personal values and priorities"
  }},
  "key_analysis_dimensions": [
    "List 4-6 specific areas that MUST be analyzed",
    "Each should be concrete and measurable", 
    "Include both quantitative and qualitative factors"
  ],
  "comparison_matrix": {{
    "options_to_compare": ["option1", "option2", "option3"],
    "evaluation_criteria": ["criterion1", "criterion2", "criterion3"],
    "weight_importance": ["most_critical", "important", "nice_to_have"]
  }},
  "required_evidence": [
    "What general principles or patterns to consider",
    "What personal factors need evaluation",
    "What external factors should be assessed"
  ],
  "output_structure": {{
    "executive_summary": "1-2 sentence overview with key considerations",
    "detailed_sections": [
      "Section 1: [Specific focus area]",
      "Section 2: [Specific focus area]",
      "Section 3: [Specific focus area]"
    ],
    "recommendation_format": "prioritized_list" | "weighted_matrix" | "pros_cons_analysis" | "step_by_step_plan",
    "action_items": "Include specific next steps"
  }},
  "quality_standards": {{
    "depth_requirement": "comprehensive" | "focused" | "overview",
    "must_include_tradeoffs": true,
    "must_include_implementation": true,
    "must_include_risk_mitigation": true,
    "must_address_emotional_factors": true,
    "must_acknowledge_uncertainty": true
  }}
}}

=== EXAMPLE FOR LIFE DECISION ===
Question: "Should I move to a different city for better opportunities?"
{{
  "analysis_type": "decision_making",
  "complexity_level": "high",
  "context_framework": {{
    "affected_parties": ["myself", "family", "friends", "current_community"],
    "time_scope": "long_term",
    "impact_level": "high",
    "complexity_factors": ["personal_relationships", "career_impact", "lifestyle_changes", "financial_implications"],
    "uncertainty_factors": ["job_market_changes", "adaptation_challenges", "relationship_outcomes"],
    "resource_constraints": ["moving_costs", "time_to_establish_new_network", "emotional_energy", "family_obligations"],
    "values_considerations": "balance between career growth and relationship stability"
  }},
  "key_analysis_dimensions": [
    "Career and professional opportunities",
    "Financial impact and cost of living changes",
    "Social connections and relationship effects",
    "Quality of life and lifestyle factors",
    "Personal growth and development potential",
    "Practical logistics and transition planning"
  ],
  "comparison_matrix": {{
    "options_to_compare": ["move_now", "wait_6_months", "stay_current_city", "move_different_city"],
    "evaluation_criteria": ["career_growth", "life_satisfaction", "financial_impact", "relationship_preservation"],
    "weight_importance": ["career_growth", "life_satisfaction", "financial_impact", "relationship_preservation"]
  }},
  "required_evidence": [
    "General job market trends and career progression patterns",
    "Personal values and life priorities assessment",
    "Social support system evaluation and relationship impact"
  ],
  "output_structure": {{
    "summary": "Clear analysis with key considerations and uncertainties",
    "detailed_sections": [
      "Section 1: Career and Financial Analysis",
      "Section 2: Personal and Social Impact Assessment", 
      "Section 3: Quality of Life Comparison",
      "Section 4: Implementation Strategy and Risk Management"
    ],
    "recommendation_format": "structured_analysis",
    "next_steps": "Include specific actions to take with timeline"
  }},
  "quality_standards": {{
    "depth_requirement": "comprehensive",
    "must_include_tradeoffs": true,
    "must_include_implementation": true,
    "must_address_emotional_factors": true,
    "must_acknowledge_uncertainty": true
  }}
}}

=== EXAMPLE FOR TECHNICAL COMPARISON ===
Question: "Which programming language should I learn for data science?"
{{
  "analysis_type": "comparison_analysis",
  "complexity_level": "medium",
  "context_framework": {{
    "affected_parties": ["myself", "future_employers", "potential_collaborators"],
    "time_scope": "long_term",
    "impact_level": "high",
    "complexity_factors": ["rapidly_evolving_field", "multiple_viable_options", "career_path_uncertainty"],
    "uncertainty_factors": ["technology_adoption_trends", "personal_learning_aptitude", "job_market_evolution"],
    "resource_constraints": ["learning_time", "available_courses", "practice_opportunities"],
    "values_considerations": "balance between marketability and personal interest"
  }},
  "key_analysis_dimensions": [
    "Learning curve and accessibility for beginners",
    "Job market demand and career opportunities",
    "Ecosystem and library availability for data science",
    "Community support and learning resources",
    "Long-term viability and industry adoption",
    "Integration with existing skills and tools"
  ],
  "comparison_matrix": {{
    "options_to_compare": ["python", "r", "sql_focus", "multi_language_approach"],
    "evaluation_criteria": ["ease_of_learning", "job_opportunities", "data_science_capabilities", "long_term_value"],
    "weight_importance": ["job_opportunities", "ease_of_learning", "data_science_capabilities", "long_term_value"]
  }},
  "required_evidence": [
    "General industry trends and language popularity patterns",
    "Personal learning style and technical background assessment",
    "Career goals and target industry requirements"
  ],
  "output_structure": {{
    "summary": "Clear recommendation with reasoning and considerations",
    "detailed_sections": [
      "Section 1: Language Comparison and Learning Requirements",
      "Section 2: Career Impact and Market Opportunities",
      "Section 3: Technical Capabilities and Ecosystem Analysis", 
      "Section 4: Implementation Strategy and Learning Path"
    ],
    "recommendation_format": "prioritized_list",
    "next_steps": "Include specific learning milestones and timeline"
  }},
  "quality_standards": {{
    "depth_requirement": "focused",
    "must_include_tradeoffs": true,
    "must_include_implementation": true,
    "must_address_emotional_factors": false,
    "must_acknowledge_uncertainty": true
  }}
}}

NOW CREATE A SIMILAR HIGH-QUALITY JSON STRUCTURE FOR THE GIVEN QUESTION.

CRITICAL REQUIREMENTS:
1. Be SPECIFIC - avoid generic terms like "consider factors"
2. Include ACTIONABLE elements that lead to concrete analysis
3. Ensure the structure will produce a SYSTEMATIC, comprehensive response
4. Think systematically - what framework ensures thorough analysis?
5. Include both HIGH-LEVEL and PRACTICAL considerations
6. Acknowledge what is uncertain or unknown
7. Consider resource constraints and values alignment

Respond with ONLY the JSON structure:"""

            structure_response = await router.generate(
                model_alias=CouncilModels.VERIFIER_MODEL,  # Use Mistral for structuring
                prompt=structure_prompt,
                max_tokens=1000,  # Increased for sophisticated JSON structures
                temperature=0.3
            )
            
            json_structure = structure_response["content"]
            self.logger.debug("JSON structure received", 
                            length=len(json_structure),
                            provider=structure_response.get("provider"))
            
            # Step 2: Generate comprehensive response with HuiHui using JSON structure
            self.logger.debug("Step 2: Generating response with HuiHui OSS using JSON structure")
            
            generator_prompt = f"""You are an expert AI assistant. Use the following JSON structure to provide a comprehensive, accurate, and helpful response.

JSON Structure Analysis:
{json_structure}
ðŸŽ¯ Key Changes in V1.3:
âœ… Added to context_framework:
"uncertainty_factors": ["what information is missing or uncertain"]

"resource_constraints": ["time", "money", "energy", "relationships", "other_limitations"]

"values_considerations": "how this aligns with personal values and priorities"

âœ… Enhanced quality_standards:
"must_acknowledge_uncertainty": true

âœ… Updated required_evidence:
Changed from specific data requests to general principles (reduces fabrication risk)

âœ… Added second example:
Technical comparison example for broader applicability

âœ… Enhanced critical requirements:
Added uncertainty acknowledgment and values/constraints consideration